import os
from datetime import datetime
import pandas as pd     # -> pip install pandas

output_file_name = 'ip_summary.csv'



BASE_DIR = os.path.dirname(os.path.realpath(__file__))
ip_log_folder_path = os.path.join(BASE_DIR,'IP_Log')

date_max = datetime.strptime('3000-01-01 00:00:00', "%Y-%m-%d %H:%M:%S" )
date_min = datetime.strptime('1900-01-01 00:00:00', "%Y-%m-%d %H:%M:%S" )

#df = pd.DataFrame(columns=['ip','xray','nginx','ngpr','total','probe_percent','first_seen','last_seen','nginx_req','ngpr_req'])
Dict_list = []


def read_ip_log(file_name):
    print('opening '+file_name)
    with open(file_name, "r") as f:
        count = 0
        while True:
            count += 1
            line = f.readline().replace('\n','').replace('\r','')
            if line:
                X = parse_line(line)
                add_line_to_dataframe(X)                
            else:
                break
        
    print('-> total line read : '+str(count))

    return True




def parse_line(mystr):
    x = mystr.split('\t, ')
    if( len(x)==4):
        return {'ip':x[0] , 'access':x[1] , 'time':x[2] , 'req':x[3][:11]}
    elif( len(x)==3):
        return {'ip':x[0] , 'access':x[1] , 'time':x[2] , 'req':''}
    else:
        raise Exception('line parse err. invalid log file?')




def add_line_to_dataframe(X):
    id_bool = [ (s['ip']==X['ip']) for s in Dict_list]
    n = sum(id_bool)
    if ( n==1 ):
        D = convert_line_to_dict(X , Dict_list[ id_bool.index(True) ] )
    elif( n==0 ):    
        D = convert_line_to_dict(X , None)
        Dict_list.append(D)
    else:
        raise Exception('err in algorithm!')

    



def convert_line_to_dict(X , old_dict=None):
    
    if(old_dict == None):
        D = {'ip':X['ip'],'xray':0,'nginx':0,'ngpr':0,'total':0,'probe_percent':0,'first_seen':date_max,'last_seen':date_min,'nginx_req':'','ngpr_req':''}
    else :
        D = old_dict

    if( X['access'] == 'XRAY'):
        D['xray'] = D['xray'] + 1
    elif( X['access'] == 'NGINX' ):
        D['nginx'] = D['nginx'] + 1 
        D['nginx_req'] = X['req']       
    elif( X['access'] == 'NG-PR' ):
        D['ngpr'] = D['ngpr'] + 1    
        D['ngpr_req'] = X['req']  
    else:
        raise Exception('err in line')

    D['total'] = D['xray']+D['nginx']+D['ngpr']

    D['probe_percent'] = (D['nginx']+D['ngpr'])/(D['total']+1e-8)    

    this_time = datetime.strptime(X['time'], "%Y-%m-%d %H:%M:%S" )
    if( this_time < D['first_seen'] ):
        D['first_seen'] = this_time

    if( this_time > D['last_seen'] ):
        D['last_seen'] = this_time
    
    return D





file_list = [f for f in os.listdir(ip_log_folder_path) if os.path.isfile(os.path.join(ip_log_folder_path, f))]

for f in file_list :
    # open only txt file or log file generated by pyprox
    if( f[-4:]=='.txt') or (f[-3]=='_'):
        myfile = os.path.join(ip_log_folder_path,f)        
        read_ip_log(myfile)
    
df = pd.DataFrame(Dict_list)
new_df = df.sort_values('probe_percent',ascending=False)
new_df.to_csv(os.path.join(BASE_DIR,output_file_name))

print('summary writed to '+ os.path.join(BASE_DIR,output_file_name) )

